version: 0.2
env:
  variables:
    Defectdojo_url: http://10.238.69.213:8080/
    Defectdojo_Token: Token c0f8a858db5026523de359bf315d8284f30f9aa8
phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "install phase....."
      - apt update
      - apt install openjdk-17-jdk -y
      - java --version
      - apt update
      - apt install maven -y
  pre_build:
    commands:
      - mvn -v
      #- mvn clean package
      - mkdir -p code && rsync -av $CODEBUILD_SRC_DIR/* code/ --exclude infra --exclude lambda-functions --exclude code
      - wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.4.0/dependency-check-7.4.0-release.zip
      - unzip dependency-check-7.4.0-release.zip
      - rm dependency-check-7.4.0-release.zip
      - chmod -R 775 $CODEBUILD_SRC_DIR/dependency-check/bin/dependency-check.sh
      - echo "stage pre_build completed..."
  build:
    commands:
      ####cfn-guard
      #- curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/aws-cloudformation/cloudformation-guard/main/install-guard.sh | sh
      #- export PATH=${PATH}:~/.guard/bin
      #- ~/.guard/bin/cfn-guard validate -d cfn_guard_template.yml -r cfn_guard_rules
      ####OWASP Depedency Check
      - git clone https://github.com/Akshay0570/ray-llm.git
      - cd dependency-check/bin
      - $CODEBUILD_SRC_DIR/dependency-check/bin/dependency-check.sh --project "Python" --prettyPrint --format JSON --scan $CODEBUILD_SRC_DIR/ray-llm
      - echo "OWASP dependency check analysis status is completed..."; 
      - ls -lrt && pwd && cat dependency-check-report.json
      - chmod 775 *
      - if( cat dependency-check-report.json | grep -i highest); then high_risk_dependency="yes"; else high_risk_dependency="no"; fi
      - echo "high depednecy are " $high_risk_dependency
      - echo "risk is " $risk
      - echo Build completed on `date`
      - echo $CODEBUILD_SRC_DIR
      #- export FILE_PATH=dependency-check-report.json
      - echo "File path is $FILE_PATH"
      - chmod 777 dependency-check-report.json 
      - ls -l 
      - date +'YYYY-MM-DD' > date.txt
      - BUILD_NUMBER=$CODEBUILD_BUILD_NUMBER
      - echo BUILD_NUMBER
      - |
        curl -X POST "${Defectdojo_url}/api/v2/import-scan/" -H "Authorization:${Defectdojo_token}" -F "file=@dependency-check-report.json" \
        --form 'engagement=1' \
        --form 'verified=true' \
        --form 'active=true' \
        --form 'lead=1' \
        --form 'product_name=test-code' \
        --form 'tags=$BUILD_NUMBER' \
        --form 'scan_type=Dependency Check Scan' \
        --form 'skip_duplicates=true' \
        --form 'close_old_findings=false' \
      #- chmod 777 $FILE_PATH
      #- ls -l 
  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`  
artifacts:
  type: zip
  files: dependency-check-report.json
